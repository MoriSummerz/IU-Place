version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app
    ports:
      - ${APP_PORT}:80
    depends_on:
      - fastapi_app
    restart: unless-stopped

  fastapi_app:
    build:
      context: ./backend/app
      dockerfile: Dockerfile
    container_name: fastapi-app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${DB_PASSWORD}@db:5432/postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - MAP_WIDTH=100
      - MAP_HEIGHT=100
      - UPDATE_CHANNEL=pixel_update
      - BROADCAST_CHANNEL=pixel_broadcast
    restart: unless-stopped

  canvas_service:
    build:
      context: ./backend/canvas_service
      dockerfile: Dockerfile
    container_name: redis-worker
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - UPDATE_CHANNEL=pixel_update
      - BROADCAST_CHANNEL=pixel_broadcast
      - MAP_WIDTH=100
      - MAP_HEIGHT=100
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis-server
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
